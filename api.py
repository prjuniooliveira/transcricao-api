import re
import uvicorn
from fastapi import FastAPI, Query
from youtube_transcript_api import YouTubeTranscriptApi

# Criar a API FastAPI
app = FastAPI()

# Fun√ß√£o para extrair o ID do v√≠deo do YouTube
def extrair_video_id(url: str):
    """
    Extrai o ID do v√≠deo a partir da URL do YouTube.
    Exemplo de entrada: https://www.youtube.com/watch?v=abcdefg1234
    Exemplo de sa√≠da: abcdefg1234
    """
    padrao = r"(?:v=|\/)([0-9A-Za-z_-]{11}).*"
    match = re.search(padrao, url)
    return match.group(1) if match else None

# Criar um endpoint para transcri√ß√£o
@app.get("/transcrever")
def transcrever_video(youtube_url: str = Query(..., title="Seu link do YouTube")):
    """
    Endpoint que recebe a URL de um v√≠deo do YouTube e retorna sua transcri√ß√£o.
    Ele tenta buscar a transcri√ß√£o nos idiomas: Espanhol, Portugu√™s do Brasil, Portugu√™s e Ingl√™s.
    """
    video_id = extrair_video_id(youtube_url)

    if not video_id:
        return {"error": "URL inv√°lida. Verifique se o link est√° correto."}

    try:
        # Lista de idiomas suportados
        idiomas = ["es", "pt-BR", "pt", "en"]  # Espanhol, Portugu√™s do Brasil, Portugu√™s, Ingl√™s
        transcricao = None

        for idioma in idiomas:
            try:
                transcricao = YouTubeTranscriptApi.get_transcript(video_id, languages=[idioma])
                break  # Sai do loop se conseguir a transcri√ß√£o
            except:
                continue  # Tenta o pr√≥ximo idioma

        if not transcricao:
            return {"error": "Nenhuma transcri√ß√£o dispon√≠vel para este v√≠deo nos idiomas suportados."}

        # Converter a transcri√ß√£o para texto simples
        texto_transcrito = " ".join([item["text"] for item in transcricao])

        return {"transcricao": texto_transcrito, "idioma_detectado": idioma}

    except Exception as e:
        return {"error": f"Erro ao processar a transcri√ß√£o: {str(e)}"}

# üöÄ Removemos o c√≥digo do ngrok, pois o Railway j√° exp√µe a API publicamente

# Rodar o servidor FastAPI
if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)
